<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>p-recruit</artifactId>
        <groupId>com.chinaredstar</groupId>
        <!--这个请替换成最新的稳定版本-->
        <version>1.0-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>p-recruit-web</artifactId>

    <properties>
        <!--jvmSettings.agentId 简写项目名称 只能包含 [a-zA-Z0-9], '.', '-', '_' 且不超过13个长度，中间加符号"-" 占一位 预留10个长度给到脚本自动追加hostname 做全局唯一标识-->
        <jvmSettings.agentId>recruit-web</jvmSettings.agentId>
        <!--jvmSettings.agentApplicationName 只能包含 [a-zA-Z0-9], '.', '-', '_'. 最大长度:24 -->
        <jvmSettings.agentApplicationName>${project.name}</jvmSettings.agentApplicationName>
    </properties>

    <profiles>
        <!--JVM的配置注意Java内存墙问题,考虑是后台计算还是实时服务-->
        <!-- dev -->
        <profile>
            <id>dev</id>
            <properties>
                <env>dev</env>
                <jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
                <jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
                <jvmSettings.javaagent>-server</jvmSettings.javaagent>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- uat -->
        <profile>
            <id>uat</id>
            <properties>
                <env>uat</env>
                <jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
                <jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
                <jvmSettings.javaagent>-server</jvmSettings.javaagent>
            </properties>
        </profile>
        <!-- uat1 -->
        <profile>
            <id>uat1</id>
            <properties>
                <env>uat1</env>
                <jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
                <jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
                <jvmSettings.javaagent>-server</jvmSettings.javaagent>
            </properties>
        </profile>
        <!-- stg -->
        <profile>
            <id>stg</id>
            <properties>
                <env>stg</env>
                <jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
                <jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
                <jvmSettings.javaagent>-server</jvmSettings.javaagent>
            </properties>
        </profile>
        <!-- prd -->
        <profile>
            <id>prd</id>
            <properties>
                <env>prd</env>
                <jvmSettings.initialMemorySize>512</jvmSettings.initialMemorySize>
                <jvmSettings.maxMemorySize>512</jvmSettings.maxMemorySize>
                <jvmSettings.javaagent>-javaagent:/data/app/pinpoint-agent-1.5.2/100/pinpoint-bootstrap-1.5.2.jar
                </jvmSettings.javaagent>
            </properties>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>com.chinaredstar</groupId>
            <artifactId>p-recruit-dubbo-api</artifactId>
            <version>${project.version}</version>
        </dependency>
        <!-- mvc -->
        <dependency>
            <groupId>javax.servlet</groupId>
            <artifactId>javax.servlet-api</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-web</artifactId>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
        </dependency>
        <dependency>
            <groupId>org.hibernate</groupId>
            <artifactId>hibernate-validator</artifactId>
        </dependency>
        <!-- spring boot -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j</artifactId>
        </dependency>
        <!-- thymeleaf -->
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf</artifactId>
        </dependency>
        <dependency>
            <groupId>org.thymeleaf</groupId>
            <artifactId>thymeleaf-spring4</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>
        <!-- swagger -->
        <dependency>
            <groupId>com.mangofactory</groupId>
            <artifactId>swagger-springmvc</artifactId>
        </dependency>
        <dependency>
            <groupId>com.wordnik</groupId>
            <artifactId>swagger-annotations</artifactId>
        </dependency>
        <!-- metrics -->
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-graphite</artifactId>
        </dependency>
        <dependency>
            <groupId>io.dropwizard.metrics</groupId>
            <artifactId>metrics-jvm</artifactId>
        </dependency>
        <dependency>
            <groupId>com.ryantenney.metrics</groupId>
            <artifactId>metrics-spring</artifactId>
        </dependency>
        <!-- disconf -->
        <dependency>
            <groupId>com.baidu.disconf</groupId>
            <artifactId>disconf-client</artifactId>
        </dependency>
        <!-- dubbo -->
        <dependency>
            <groupId>com.alibaba</groupId>
            <artifactId>dubbo</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
        </dependency>
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpcore</artifactId>
        </dependency>
        <dependency>
            <groupId>com.chinaredstar</groupId>
            <artifactId>perseus</artifactId>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
        </dependency>
        <dependency>
            <groupId>org.skyscreamer</groupId>
            <artifactId>jsonassert</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-eureka</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-starter-hystrix</artifactId>
        </dependency>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-actuator</artifactId>
            <version>1.3.3.RELEASE</version>
        </dependency>

        <dependency>
            <groupId>org.apache.curator</groupId>
            <artifactId>curator-client</artifactId>
            <version>2.10.0</version>
        </dependency>

    </dependencies>
    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>org.springframework.cloud</groupId>
                <artifactId>spring-cloud-dependencies</artifactId>
                <version>Brixton.SR7</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
        </dependencies>

    </dependencyManagement>

    <build>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <excludes>
                    <exclude>env/**</exclude>
                </excludes>
            </resource>
            <resource>
                <directory>src/main/resources/env/${env}</directory>
                <targetPath>${project.build.outputDirectory}</targetPath>
                <filtering>true</filtering>
            </resource>
        </resources>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <excludes>
                        <exclude>*.xml</exclude>
                        <exclude>*.properties</exclude>
                    </excludes>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>appassembler-maven-plugin</artifactId>
                <version>1.10</version>
                <configuration>
                    <repositoryLayout>flat</repositoryLayout>
                    <repositoryName>lib</repositoryName>
                    <configurationDirectory>conf</configurationDirectory>
                    <copyConfigurationDirectory>true</copyConfigurationDirectory>
                    <configurationSourceDirectory>src/main/resources/env/${env}</configurationSourceDirectory>
                    <includeConfigurationDirectoryInClasspath>true</includeConfigurationDirectoryInClasspath>
                    <target>${project.build.directory}</target>
                    <daemons>
                        <daemon>
                            <id>${project.name}</id>
                            <mainClass>Application</mainClass>
                            <platforms>
                                <platform>jsw</platform>
                            </platforms>
                            <wrapperLogFile>logs/${project.name}.log</wrapperLogFile>
                            <generatorConfigurations>
                                <generatorConfiguration>
                                    <generator>jsw</generator>
                                    <includes>
                                        <include>macosx-universal-64</include>
                                        <include>linux-x86-32</include>
                                        <include>linux-x86-64</include>
                                        <include>windows-x86-32</include>
                                        <include>windows-x86-64</include>
                                    </includes>
                                    <configuration>
                                        <property>
                                            <name>configuration.directory.in.classpath.first</name>
                                            <value>conf</value>
                                        </property>
                                        <property>
                                            <name>set.default.REPO_DIR</name>
                                            <value>lib</value>
                                        </property>
                                        <property>
                                            <name>wrapper.ping.timeout</name>
                                            <value>300</value>
                                        </property>
                                        <property>
                                            <name>wrapper.startup.timeout</name>
                                            <value>300</value>
                                        </property>
                                    </configuration>
                                </generatorConfiguration>
                            </generatorConfigurations>
                            <jvmSettings>
                                <initialMemorySize>${jvmSettings.initialMemorySize}</initialMemorySize>
                                <maxMemorySize>${jvmSettings.maxMemorySize}</maxMemorySize>
                                <extraArguments>
                                    <extraArgument>-server</extraArgument>
                                    <extraArgument>${jvmSettings.javaagent}</extraArgument>
                                    <extraArgument>-Dpinpoint.agentId=${jvmSettings.agentId}</extraArgument>
                                    <extraArgument>-Dpinpoint.applicationName=${jvmSettings.agentApplicationName}
                                    </extraArgument>
                                </extraArguments>
                            </jvmSettings>
                        </daemon>
                    </daemons>
                </configuration>
                <executions>
                    <execution>
                        <id>generate-jsw-scripts</id>
                        <phase>package</phase>
                        <goals>
                            <goal>generate-daemons</goal>
                            <goal>create-repository</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-assembly-plugin</artifactId>
                <version>2.6</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>single</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <descriptor>assembly/bin.xml</descriptor>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>cobertura-maven-plugin</artifactId>
                <configuration>
                    <!--检查-->
                    <check>
                        <!--每个类的分支覆盖率-->
                        <branchRate>5</branchRate>
                        <!--每个类的代码行覆盖率-->
                        <lineRate>10</lineRate>
                        <!--校验失败则中止.即为true时如果校验失败则打包执行失败,反之则只是打出告警日志-->
                        <haltOnFailure>false</haltOnFailure>
                        <!--整体的分支覆盖率-->
                        <totalBranchRate>5</totalBranchRate>
                        <!--整体的代码行覆盖率-->
                        <totalLineRate>5</totalLineRate>
                        <!--每个包的分支行覆盖率-->
                        <packageBranchRate>5</packageBranchRate>
                        <!--每个包的代码行覆盖率-->
                        <packageLineRate>5</packageLineRate>
                        <regexes>
                            <!--通过表达式设定覆盖率伐值-->
                            <regex>
                                <pattern>com.chinaredstar.*</pattern>
                                <branchRate>5</branchRate>
                                <lineRate>10</lineRate>
                            </regex>
                        </regexes>
                    </check>
                    <formats>
                        <!--生产报表格式-->
                        <format>html</format>
                        <format>xml</format>
                    </formats>
                    <!--设置为true 表示生产多模块项目报表 -->
                    <!--<aggregate>true</aggregate>-->
                    <instrumentation></instrumentation>
                </configuration>
                <executions>
                    <!--默认<check/>这个校验是需要单独敲命令的,当然可以根据实际需要,在execution里配置goal和phase来完成命令的绑定.比如在打包前做校验,可以这么配置execution-->
                    <execution>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>check</goal>
                            <goal>cobertura</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>
</project>
